/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.towson;

import java.awt.BorderLayout;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.JOptionPane;

/**
 *
 * @author williamsmith
 */
public class DropCourse extends javax.swing.JPanel {

    private Model model = new Model();
    Model.ModelObserver mObserver = model.new ModelObserver();
    /**
     * Creates new form DropCourse
     */
    public DropCourse() {
        initComponents();
    }
    
    public DropCourse(Model model) {
        super(new BorderLayout());
        this.model = model;
        model.addObserver(mObserver);
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dc_dropBtn = new javax.swing.JButton();
        dc_mainMenuBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dc_enterIdNum = new javax.swing.JTextField();
        dc_courseIdNum = new javax.swing.JTextField();

        dc_dropBtn.setForeground(new java.awt.Color(206, 17, 38));
        dc_dropBtn.setText("Drop Course");
        dc_dropBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dc_dropBtnActionPerformed(evt);
            }
        });

        dc_mainMenuBtn.setForeground(new java.awt.Color(206, 17, 38));
        dc_mainMenuBtn.setText("Main Menu");
        dc_mainMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dc_mainMenuBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Withdrawal from a Course");

        jLabel3.setText("Enter course ID#");

        jLabel2.setText("Enter student SSN");

        dc_enterIdNum.setToolTipText("Enter student SSN");

        dc_courseIdNum.setToolTipText("Enter course ID#");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(262, Short.MAX_VALUE)
                .addComponent(dc_mainMenuBtn)
                .addGap(29, 29, 29)
                .addComponent(dc_dropBtn)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dc_enterIdNum, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dc_courseIdNum))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dc_enterIdNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dc_courseIdNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 272, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dc_dropBtn)
                    .addComponent(dc_mainMenuBtn))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void dc_dropBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dc_dropBtnActionPerformed
        // TODO add your handling code here:
        //NAVYA: Do you have time to wire this up?
    	boolean cIdIsValid = checkCourseId();
        boolean sIdIsValid = checkStudentSsn();
        boolean regIsValid= checkRegisterd();
        boolean showErrorMsg = false;
        String errorMessage = "";
        
        String sql = "DELETE FROM ENROLLS WHERE SSN ="+dc_enterIdNum.getText()+" AND Course_Id = "+dc_courseIdNum.getText();
        
        if (sIdIsValid == true && cIdIsValid == true && regIsValid == true){
		try (Connection conn = Main.connect(); Statement stmt = conn.createStatement()) {
			int rs = stmt.executeUpdate(sql);
			JOptionPane.showMessageDialog(null, "Successfully withdrawn course");
			dc_enterIdNum.setText("");
			dc_courseIdNum.setText("");
		} catch (SQLException e) {

		}
        } else {
            if(cIdIsValid == false){
                errorMessage = errorMessage + "Please enter a valid course id\n";
                showErrorMsg = true;
            }
            if(sIdIsValid == false){
                errorMessage = errorMessage + "Please enter a valid SSN\n";
                showErrorMsg = true;
            }
            if(cIdIsValid && sIdIsValid && regIsValid == false){
                errorMessage = errorMessage + "Not registered for the course\n";
                showErrorMsg = true;
            }
          
        }
        if(showErrorMsg == true){
            JOptionPane.showMessageDialog(null, errorMessage);
        }
    }//GEN-LAST:event_dc_dropBtnActionPerformed
    
    private boolean checkCourseId() {
		boolean result = false;

		String sql = "SELECT * From COURSE WHERE Course_Id = ?";
		try (Connection conn = Main.connect(); PreparedStatement stmt = conn.prepareStatement(sql)) {
			stmt.setString(1, dc_courseIdNum.getText());
			ResultSet rs = stmt.executeQuery();

			if (!rs.next()) {
				result = false;
			} else {
				result = true;
			}

		} catch (SQLException e) {

		}
		return result;

	}
    
    private boolean checkStudentSsn() {
		boolean result = false;

		String sql = "SELECT * From STUDENT WHERE SSN = ?";
		try (Connection conn = Main.connect(); PreparedStatement stmt = conn.prepareStatement(sql)) {
			stmt.setString(1, dc_enterIdNum.getText());
			ResultSet rs = stmt.executeQuery();

			if (!rs.next()) {
				result = false;
			} else {
				result = true;
			}

		} catch (SQLException e) {

		}
		return result;

	}
    
    private boolean checkRegisterd() {
		boolean result = false;

		String sql = "SELECT * From ENROLLS WHERE SSN = ? AND Course_Id =?";
		try (Connection conn = Main.connect(); PreparedStatement stmt = conn.prepareStatement(sql)) {
			stmt.setString(1, dc_enterIdNum.getText());
			stmt.setString(2, dc_courseIdNum.getText());
			ResultSet rs = stmt.executeQuery();

			if (!rs.next()) {
				result = false;
			} else {
				result = true;
			}

		} catch (SQLException e) {

		}
		return result;

	}


    private void dc_mainMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dc_mainMenuBtnActionPerformed
        String cmd = evt.getActionCommand();
            if ("Main Menu".equals(cmd)) {
                model.returnToMainMenu();
            }
    }//GEN-LAST:event_dc_mainMenuBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField dc_courseIdNum;
    private javax.swing.JButton dc_dropBtn;
    private javax.swing.JTextField dc_enterIdNum;
    private javax.swing.JButton dc_mainMenuBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
